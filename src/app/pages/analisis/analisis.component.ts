import {Component, HostListener, Injectable} from '@angular/core';
import {FormsModule} from '@angular/forms';
import {CommonModule, NgClass} from '@angular/common';
import { Chart, registerables } from 'chart.js';

import {HttpClientModule} from '@angular/common/http';

@Injectable({
  providedIn: 'root'  // 游눠 Esto evitar치 que se instancie m칰ltiples veces
})

@Component({
  selector: 'app-analisis',
  standalone: true,
  imports: [
    FormsModule,
    NgClass,
    CommonModule,
    HttpClientModule,
  ],
  templateUrl: './analisis.component.html',
  styleUrl: './analisis.component.css'
})
export class AnalisisComponent {

  candidatos: string[] = [
    'Daniel Noboa',
    'Luisa Gonz치lez',
    'Andrea Gonz치lez',
    'Pedro Granja',
    'Henry Kronfle',
    'Francesco Tabbachi',
    'Henry Cucal칩n',
    'Leonidas Iza',
    'Jimmy Jairala',
    'Jorge Escalada',
    'Luis Felipe Tiller칤a',
    'Carlos Rabascall',
    'Juan Iv치n Cueva',
    'V칤ctor Araus',
    'Enrique G칩mez',
    'Iv치n Saquicela',
  ]

  partidos = [
    { nombre: 'Daniel Noboa', partido: 'Acci칩n Democr치tica Nacional', imagen: 'Daniel Noboa-modified.png', aceptacion: 45 },
    { nombre: 'Luisa Gonz치lez', partido: 'Revoluci칩n Ciudadana - RETO', imagen: 'Luisa Gonz치lez-modified.png', aceptacion: 35 },
    { nombre: 'Andrea Gonz치lez', partido: 'Sociedad Patri칩tica', imagen: 'Andrea Gonz치lez-modified.png', aceptacion: 10 },
    { nombre: 'Pedro Granja', partido: 'Partido Socialista Ecuatoriano', imagen: 'Pedro Granja-modified.png', aceptacion: 1 },
    { nombre: 'Henry Kronfle', partido: 'Partido Social Cristiano', imagen: 'Henry Kronfle-modified.png', aceptacion: 2 },
    { nombre: 'Francesco Tabbachi', partido: 'CREO', imagen: 'Francesco Tabacchi-modified.png', aceptacion: 1 },
    { nombre: 'Henry Cucal칩n', partido: 'Construye', imagen: 'Henry Cucal칩n-modified.png', aceptacion: 1 },
    { nombre: 'Leonidas Iza', partido: 'Pachakutik', imagen: 'Leonidas Iza-modified.png', aceptacion: 1 },
    { nombre: 'Jimmy Jairala', partido: 'Centro Democr치tico', imagen: 'Jimmy Jairala-modified.png', aceptacion: 1 },
    { nombre: 'Jorge Escalada', partido: 'Unidad Popular', imagen: 'Jorge Escalada-modified.png', aceptacion: 1 },
    { nombre: 'Luis Felipe Tiller칤a', partido: 'Avanza', imagen: 'Felipe Tiller칤a-modified.png', aceptacion: 1 },
    { nombre: 'Carlos Rabascall', partido: 'Izquierda Democr치tica', imagen: 'Carlos Rabascall-modified.png', aceptacion: 1 },
    { nombre: 'Juan Iv치n Cueva', partido: 'AMIGO', imagen: 'Juan Cueva-modified.png', aceptacion: 1 },
    { nombre: 'V칤ctor Araus', partido: 'Pueblo, Igualdad y Democracia', imagen: 'V칤ctor Araus-modified.png', aceptacion: 1 },
    { nombre: 'Enrique G칩mez', partido: 'SUMA', imagen: 'Enrique Gomez-modified.png', aceptacion: 1 },
    { nombre: 'Iv치n Saquicela', partido: 'Democracia S칤', imagen: 'Iv치n Saquicela-modified.png', aceptacion: 1 }
  ];

  fuentes: string[] = ['Youtube', 'Reddit', 'Facebook']


  presenciaRedes: any[] = [];

  constructor() {
    this.generarDatosRedes();
  }

    generarDatosRedes() {
    this.presenciaRedes = this.fuentes.map(fuente => ({
      fuente,
      porcentaje: Math.floor(Math.random() * 100) + 1
    }));
  }

  ngAfterViewInit() {
    this.generarGraficaAceptacion();
    this.generarGraficaRedes();
  }

  generarGraficaAceptacion() {
    const ctx = document.getElementById('graficoAceptacion') as HTMLCanvasElement;
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Muy Bueno', 'Bueno', 'Neutral', 'Malo', 'Muy Malo'],
        datasets: [{
          label: 'Nivel de Aceptaci칩n (%)',
          data: [Math.random() * 40, Math.random() * 30, Math.random() * 20, Math.random() * 10, Math.random() * 5],
          backgroundColor: ['#4CAF50', '#8BC34A', '#FFC107', '#FF5722', '#D32F2F']
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            labels: {
              color: '#000000',  // Texto blanco en la leyenda
              font: {
                size: 16  // Tama침o de fuente m치s grande
              }
            }
          }
        },
        scales: {
          x: {
            ticks: {
              color: '#FFFFFF',  // Texto blanco en el eje X
              font: {
                size: 14  // Tama침o de fuente m치s grande
              }
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)'  // L칤neas de la grilla m치s suaves
            }
          },
          y: {
            ticks: {
              color: '#000',  // Texto blanco en el eje Y
              font: {
                size: 14  // Tama침o de fuente m치s grande
              }
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)'  // L칤neas de la grilla m치s suaves
            }
          }
        }
      }
    });
  }

  generarGraficaRedes() {
    const ctx = document.getElementById('graficoRedes') as HTMLCanvasElement;
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: this.presenciaRedes.map(r => r.fuente),
        datasets: [{
          label: 'Presencia en Redes Sociales (%)',
          data: this.presenciaRedes.map(r => r.porcentaje),
          backgroundColor: ['#FF0000', '#FF4500', '#3b5998']
        }]
      },
      options: {
        indexAxis: 'y',
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            labels: {
              color: '#000000',  // Texto blanco en la leyenda
              font: {
                size: 16  // Tama침o de fuente m치s grande
              }
            }
          }
        },
        scales: {
          x: {
            ticks: {
              color: '#FFFFFF',  // Texto blanco en el eje X
              font: {
                size: 14  // Tama침o de fuente m치s grande
              }
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)'  // L칤neas de la grilla m치s suaves
            }
          },
          y: {
            ticks: {
              color: '#000000',  // Texto blanco en el eje Y
              font: {
                size: 14  // Tama침o de fuente m치s grande
              }
            },
            grid: {
              color: 'rgba(255, 255, 255, 0.2)'  // L칤neas de la grilla m치s suaves
            }
          }
        }
      }
    });
  }


  seleccionCandidatos: string[] = [];
  seleccionFuentes: string[] = [];

  mostrarCandidatos: boolean = false;
  mostrarFuentes: boolean = false;

  @HostListener('document:click', ['$event'])
  clickFuera(event: Event) {
    const target = event.target as HTMLElement;
    if (!target.closest('.dropdown')) {
      this.mostrarCandidatos = false;
      this.mostrarFuentes = false;
    }
  }

  toggleSeleccion(lista: string[], item: string) {
    if (item === 'Seleccionar Todos') {
      if (lista.length === this.candidatos.length) {
        lista.length = 0;  // Desmarcar todo
      } else {
        lista.length = 0;
        lista.push(...this.candidatos);  // Seleccionar todos
      }
    } else if (item === 'Seleccionar Todas') {
      if (lista.length === this.fuentes.length) {
        lista.length = 0;
      } else {
        lista.length = 0;
        lista.push(...this.fuentes);
      }
    } else {
      if (lista.includes(item)) {
        lista.splice(lista.indexOf(item), 1);
      } else {
        lista.push(item);
      }
    }
  }



}
